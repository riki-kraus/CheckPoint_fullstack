/**
 * @preserve
 * Kevin Frankot - react-hook-form-yup v1.0.0
 */
"use strict";var e=require("react"),o=require("react-hook-form"),r=require("@radix-ui/react-use-callback-ref"),t=require("flat"),n=require("yup-field-props-react"),a=require("@hookform/resolvers/yup");const l=e.createContext({schemaSyncMode:!1,disableValidateOnSchemaSync:!1,trigger:()=>Promise.resolve(!1)}),s=({schema:a,schemaSyncMode:s,disableValidateOnSchemaSync:c,children:u})=>{const m=o.useFormContext(),{formState:{submitCount:i}}=m,d=m.control._options.mode,h=m.control._options.reValidateMode,S=null!=s?s:"onBlur",C=null!=c?c:"onSubmit"===(i>0?null!=h?h:"onChange":null!=d?d:"onSubmit"),f=r.useCallbackRef((()=>{var e,o;const r="all"===S||"onChange"===S||"onTouched"===S,n=e=>{const o=t.flatten(e);return Object.keys(o).filter((e=>o[e]))},a="all"===S||"onTouched"===S||"onBlur"===S?n(null!==(e=m.formState.touchedFields)&&void 0!==e?e:{}):[],l=r?n(null!==(o=m.formState.dirtyFields)&&void 0!==o?o:{}):[],s=a.length&&l.length?[...new Set([...a,...l])]:[...a,...l];return m.trigger(s)})),g=e.useMemo((()=>({schemaSyncMode:S,disableValidateOnSchemaSync:C,trigger:f})),[S,C,f]);return e.createElement(l.Provider,{value:g},e.createElement(n.SchemaProvider,{schema:a,values:m.getValues,context:m.control._options.context},u))},c=()=>e.useContext(l),u=(o,r)=>{const t=n.useFieldProps(o),{schemaSyncMode:a,disableValidateOnSchemaSync:l,trigger:s}=c(),u="onTouched"===a||"onChange"===a||"all"===a?r.isTouched:null,m=[u,a,l,s,t.forceFormUpdate],i=e.useCallback((()=>{("onChange"===a||"all"===a||"onTouched"===a&&u)&&(t.forceFormUpdate(),l||s())}),[...m]),d=e.useCallback((()=>{"onBlur"!==a&&"onTouched"!==a&&"all"!==a||(t.forceFormUpdate(),l||s())}),[...m]);return e.useMemo((()=>({onChange:i,onBlur:d,schemaState:t})),[i,d,t])},m=({name:r,...t})=>{const{field:n,fieldState:a,formState:l}=o.useController({name:r,...t}),{onChange:s,onBlur:c,schemaState:m}=u(r,a),i=e.useCallback(((...e)=>{n.onChange(...e),s()}),[n.onChange,s]),d=e.useCallback((()=>{n.onBlur(),c()}),[n.onBlur,c]);return e.useMemo((()=>({field:{...n,onChange:i,onBlur:d},fieldState:a,formState:l,schemaState:m})),[n,a,l,i,d,m])};exports.Controller=e=>{const o=m(e);return e.render(o)},exports.FormProvider=({schema:r,schemaSyncMode:t,disableValidateOnSchemaSync:n,children:a,...l})=>e.createElement(o.FormProvider,l,e.createElement(s,{schema:r,schemaSyncMode:t,disableValidateOnSchemaSync:n},a)),exports.SchemaConfigsContext=l,exports.SchemaConfigsProvider=s,exports.useController=m,exports.useForm=({schema:r,schemaOptions:t,resolverOptions:n,...l})=>{const s=e.useMemo((()=>a.yupResolver(r,t,n)),[r,t,n]),c=o.useForm({...l,resolver:s});return e.useMemo((()=>({...c,schema:r})),[c,c.formState,r])},exports.useSchemaConfigs=c,exports.useSchemaController=u;
