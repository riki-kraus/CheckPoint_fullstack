import React, { ReactNode } from 'react';
import { AnyObject, ObjectSchema } from 'yup';
export type SchemaProviderProps = {
    schema: ObjectSchema<any, AnyObject, any, ''>;
    values: AnyObject | (() => AnyObject);
    context?: AnyObject | (() => AnyObject);
    children?: ReactNode;
};
export type SchemaProviderContext = Omit<SchemaProviderProps, 'children'> & {
    forceUpdate: () => void;
    resolvedValues: AnyObject;
    resolvedContext?: AnyObject;
};
export declare const SchemaContext: React.Context<SchemaProviderContext>;
export declare const SchemaProvider: ({ schema, values, context: yupContext, children, }: SchemaProviderProps) => React.JSX.Element;
export declare const useSchemaContext: () => SchemaProviderContext;
