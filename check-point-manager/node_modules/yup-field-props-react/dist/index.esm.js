/**
 * @preserve
 * Kevin Frankot - yup-field-props-react v1.0.0
 */
import e,{useState as t,useCallback as o,createContext as r,useMemo as a,useContext as c}from"react";import{object as n}from"yup";import{getFieldPathsFromName as s,getFieldDescriptionFromPaths as l,getFieldPropsFromDescription as u}from"yup-field-props-base";const p=()=>{const[,e]=t({});return o((()=>{e({})}),[])},v=e=>"function"==typeof e?e():e,d=r({schema:n(),values:{},context:void 0,resolvedValues:{},resolvedContext:void 0,forceUpdate:()=>{}}),m=({schema:t,values:o,context:r,children:c})=>{const n=p(),s=v(o),l=v(r),u=a((()=>({schema:t,values:o,context:r,resolvedValues:s,resolvedContext:l,forceUpdate:n})),[t,o,r,s,l,n]);return e.createElement(d.Provider,{value:u},c)},i=()=>c(d),f=e=>{const{schema:t,values:o,context:r}=i(),c=v(o),n=v(r),{valuePath:u,parentPath:p}=a((()=>s(e)),[e]);return a((()=>l({valuePath:u,parentPath:p,schema:t,values:c,context:n})),[c,e,u,p,t,n])},h=e=>{const t=f(e),o=p(),{values:r,context:c,forceUpdate:n}=i(),s=v(r),l=v(c);return a((()=>({...u({name:e,fieldDescription:t,values:s,context:l}),forceFieldUpdate:o,forceFormUpdate:n})),[t,r,c,e,o,n])};export{m as SchemaProvider,f as useFieldDescription,h as useFieldProps,i as useSchemaContext};
